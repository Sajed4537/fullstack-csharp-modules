@model ImportPreviewVm

<h1>Prévisualisation de l’import</h1>

@if (TempData["message"] != null)
{
    <div class="alert alert-info">@TempData["message"]</div>
}

<div class="row mt-3">
    <div class="col-md-6">
        <dl class="row">
            <dt class="col-sm-6">Type de données :</dt>
            <dd class="col-sm-6">@Model.TypeDonnee</dd>

            <dt class="col-sm-6">Format :</dt>
            <dd class="col-sm-6">@Model.Format</dd>

            <dt class="col-sm-6">Total lignes lues :</dt>
            <dd class="col-sm-6">@Model.TotalLignes</dd>

            <dt class="col-sm-6 text-success">Lignes valides :</dt>
            <dd class="col-sm-6 text-success">@Model.NbValides</dd>

            <dt class="col-sm-6 text-danger">Lignes rejetées (parsing) :</dt>
            <dd class="col-sm-6 text-danger">@Model.NbRejetees</dd>
        </dl>
    </div>
</div>

@if (Model.Erreurs != null && Model.Erreurs.Any())
{
    <div class="alert alert-warning">
        <h5 class="mb-2">Erreurs détectées :</h5>
        <ul class="mb-0">
            @foreach (var err in Model.Erreurs)
            {
                <li>@err</li>
            }
        </ul>
    </div>
}

<h3 class="mt-4">Aperçu des lignes valides</h3>

@if (Model.Produits != null && Model.Utilisateurs == null)
{
    <table class="table table-striped table-hover align-middle">
        <thead>
            <tr>
                <th>Nom</th>
                <th>Catégorie</th>
                <th class="text-end">Prix</th>
                <th class="text-center">Stock</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Produits.Any())
            {
                <tr>
                    <td colspan="4" class="text-muted text-center">Aucune ligne valide.</td>
                </tr>
            }
            else
            {
                foreach (var p in Model.Produits)
                {
                    <tr>
                        <td>@p.Nom</td>
                        <td>@p.Categorie</td>
                        <td class="text-end">@p.Prix.ToString("C", new CultureInfo("fr-FR"))</td>
                        <td class="text-center">@p.Stock</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
else if (Model.Utilisateurs != null && Model.Produits == null)
{
    <table class="table table-striped table-hover align-middle">
        <thead>
            <tr>
                <th>Nom</th>
                <th>Prénom</th>
                <th>Email</th>
                <th>Type</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Utilisateurs.Any())
            {
                <tr>
                    <td colspan="4" class="text-muted text-center">Aucune ligne valide.</td>
                </tr>
            }
            else
            {
                foreach (var u in Model.Utilisateurs)
                {
                    <tr>
                        <td>@u.Nom</td>
                        <td>@u.Prenom</td>
                        <td>@u.Email</td>
                        <td>@u.Type</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
else
{
    <p class="text-muted">Aucune donnée valide à afficher.</p>
}

<hr class="my-4" />

<div class="d-flex gap-2">
    <form asp-controller="Import"
          asp-action="Confirm"
          method="post"
          asp-route-type="@Model.TypeDonnee">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-success">
            Confirmer l’import
        </button>
    </form>

    <a asp-controller="Import" asp-action="Index" class="btn btn-outline-secondary">
        Annuler / Recommencer
    </a>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
